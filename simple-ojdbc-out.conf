# file: simple-ojdbc-out.conf
input {
    jdbc {
        # oracle jdbc connection string to our database, mydb
        #jdbc_connection_string => "jdbc:oracle:thin:@//10.90.1.189:1521/alboran"
	# The user we wish to execute our statement as
        #jdbc_user => "CM_RD_DEV"
	#jdbc_password => "CM_RD_DEV"

	jdbc_connection_string => "jdbc:oracle:thin:@//10.90.1.108:1521/prod"
	# The user we wish to execute our statement as
        jdbc_user => "SCOTT"
	jdbc_password => "SCOTT"

	# The path to our downloaded jdbc driver
        jdbc_driver_library => "D:\Elastic\elasticsearch-5.2.2\elasticsearch-5.2.2\lib\ojdbc14-1.0.jar"
	# The name of the driver class for Oracle DB
        jdbc_driver_class => "Java::oracle.jdbc.driver.OracleDriver"
	schedule => "*/5 * * * * *"
	# our query	
        # statement => "SELECT temp_res.r,   temp_res.count_val,   (SELECT CUSTOMERID FROM NAMEBOOK WHERE CUSTOMERID = PROD_ENTITY_PC_ID_C   ) customerid,   (SELECT companyname FROM NAMEBOOK WHERE CUSTOMERID = PROD_ENTITY_PC_ID_C   ) companyname,   (SELECT accountname FROM ACCOUNT WHERE ACCOUNTID = PROD_ENTITY_PC_ID_A   ) accountname,   (SELECT ACCOUNTID FROM ACCOUNT WHERE ACCOUNTID = PROD_ENTITY_PC_ID_A   ) ACCOUNTID,   (SELECT external_id1 FROM customer WHERE CUSTOMERID = PROD_ENTITY_PC_ID_C   ) sfa_id,  (SELECT ban FROM ACCOUNT WHERE ACCOUNTID = PROD_ENTITY_PC_ID_A   ) BAN,   sr_oppurtunity_id,   SR_SUB_STATUS review_pending,   SR_HIERARCHY_ID SR_ID,   SR_HIERARCHY_ID DISPLAY_SR_ID,   SR_PARAM_VERSION SR_VERSION,   DECODE(SR_STATUS,'PENDING','HELD',SR_STATUS) AS SR_STATUS,   (SELECT name   FROM ref_application   WHERE application_id =     (SELECT NVL(application_id,1)     FROM account     WHERE ACCOUNTID = PROD_ENTITY_PC_ID_A     )   ) SR_SOURCE,   SR_SUB_STATUS review_status,   SR_CREATED_BY sr_owner,   ' ' more_info,   (SELECT COUNT(1) FROM LABEL_ENTITY_ASSOC WHERE ENTITY_ID=SR_HIERARCHY_ID   )               AS LABEL_COUNT,   2               AS Telephone_Number,   2               AS TollFree_Number,   2               AS TF_Translation_Number,   SR_CREATED_DATE AS ORDER_CREAT_DATE,   CASE     WHEN (SELECT COUNT(1) FROM LABEL_ENTITY_ASSOC WHERE ENTITY_ID=SR_HIERARCHY_ID) = 1     THEN       (SELECT MAX(color) FROM label_sr WHERE service_request_id = SR_HIERARCHY_ID       )     ELSE NULL   END AS label_name FROM   (SELECT *   FROM     (SELECT rownum AS r,       re.*     FROM       (SELECT COUNT(*) over() AS COUNT_VAL ,         tmp.*       FROM         (SELECT SR.*,           PE3.PROD_ENTITY_PC_ID PROD_ENTITY_PC_ID_C ,           PE2.PROD_ENTITY_PC_ID PROD_ENTITY_PC_ID_A         FROM           (SELECT PE.HIERARCHY_ID SR_HIERARCHY_ID,             PEP.PARAM_VERSION SR_PARAM_VERSION,             PES.SUB_TYPE SR_SUB_TYPE,             PES.CREATED_BY SR_CREATED_BY,             PE.CREATED_DATE SR_CREATED_DATE ,             PE.PROD_ENTITY_ROOT_ID SR_PROD_ENTITY_ROOT_ID,             PE.PROD_ENTITY_INSTANT_ID SR_PROD_ENTITY_INSTANT_ID,             PES.ACTIVITY SR_ACTIVITY,             PES.STATUS SR_STATUS,             PE.PROD_ENTITY_TYPE SR_PROD_ENTITY_TYPE,             PES.SUB_STATUS SR_SUB_STATUS,             TBL.ENTITY_VALUE AS sr_oppurtunity_id           FROM PROD_ENTITY PE,             PROD_ENTITY_STATUS PES,             PROD_ENTITY_PARAMETER PEP,             PROD_ENTITY_PARAM_STATUS PEPS,             TBL_ENTITY_SEARCH TBL           WHERE pe.prod_entity_type      = 'SERVICE REQUEST'           AND PEP.param_id               =PEPS.param_id           AND PEP.prod_entity_instant_id =PES.prod_entity_instant_id           AND PES.prod_entity_instant_id =PE.prod_entity_instant_id           AND PE.PROD_ENTITY_INSTANT_ID  = TBL.PROD_ENTITY_INSTANT_ID(+)           AND PES.STATUS NOT            IN ('DELETED')           AND TBL.ENITY_NAME(+)          = 'Opportunity ID'           AND PEPS.STATUS               IN ('PENDING','IN PROGRESS','COMPLETED','JEOPARDY','ACTIVATED')           ) SR ,           PROD_ENTITY PE1,           PROD_ENTITY PE2,           PROD_ENTITY PE3         WHERE SR.SR_PROD_ENTITY_ROOT_ID(+) = PE1.PROD_ENTITY_INSTANT_ID         AND PE1.PROD_ENTITY_PARENT_ID(+)   = PE2.PROD_ENTITY_INSTANT_ID         AND PE2.PROD_ENTITY_PARENT_ID(+)   =PE3.PROD_ENTITY_INSTANT_ID         AND PE1.PROD_ENTITY_TYPE           ='Offering'         AND PE2.PROD_ENTITY_TYPE           ='ACCOUNT'         AND PE3.PROD_ENTITY_TYPE           ='CUSTOMER'         ORDER BY PE3.PROD_ENTITY_INSTANT_ID DESC ,           PE2.PROD_ENTITY_INSTANT_ID DESC ,           PE1.PROD_ENTITY_INSTANT_ID DESC         ) tmp       )re     ) t   WHERE T.R BETWEEN 0 AND 10   ) temp_res"
	#clean_run => false
	#record_last_run => true
	#statement => "select * from customer  where created_date > :sql_last_value"
	#statement => "select * from order_contactbook_bkp"
	#statement => "select * from estest where insert_time >= systimestamp - numtodsinterval(10,'SECOND')"
	#statement => "select * from service"
	statement => "select * from emp"
	#dbc_paging_enabled => true 
	#jdbc_page_size => "5000" 	
	#use_column_value => true
	#tracking_column => insert_time
    }
}
output {
    #stdout { codec => json_lines }
    elasticsearch {
        #index => "escontact"
        #document_type => "details"
        #document_id => "%{contactid}"
	index => "services"
        document_type => "service"
        #document_id => "%{service_inst_id}"
	document_id => "%{empno}"
        hosts => ["http://localhost:9200"]
    }
}